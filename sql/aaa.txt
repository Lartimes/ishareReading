我们要写个在线读书的网站，多Agent协作读书(比如一个鉴赏者，两个辩证者，同时提供AI读书功能吧， 加快效率与陪伴)
和生活小工具，比如自动订票，天气等等这些对话
支持什么

--- prompt
--- 多agent
--- mcp
---- 记忆化
----


1. 第一个就是prompt
我们一定要做成可以根据用户历史最近输入的情感 和
反馈 ，是否生成新的prompt，自动搞到nacos配置上，这个可能需要你们
py 自动调浏览器，写入，然后回调db，读取prompt
2. 多model？？多平台，比如你们做的py一个自动使用浏览器
接入ds还是其它model mcp 应该也算
3. 多模态，语音 识图 等 场景分析
4. mcp client --> 多servers, 此处看一看如何调用吧，不可能为一些具体场景如天气去做tool的，应该是通用的一般是一个agent 1-5个，做向量查询
应该是一个通用的，比如说天气tool，这个直接取bing/duckduck搜索就行了，不可能做一个的
5. 主要是一个什么平台，在线读书分享社区？？ 在线预览pdf，大pdf如何处理，
OCR识别怎么做到兼容性，外文等等数学导入，
6. 多agent协作？ 看看能不能做吧 a2a协议



这些的话可以建什么表？？？
@TableField(fill = FieldFill.INSERT)
    protected LocalDateTime createdAt;
    @TableField(fill = FieldFill.INSERT_UPDATE)
    protected LocalDateTime updatedAt;
    @TableLogic
    protected LocalDateTime deletedAt;
    @TableField(exist = false)
    private Operator operatedBy = Operator.USER;
#---菜单表 是否要rbac 感觉没必要，最后还是加上吧，肖宇轩加上rbac
    以上都是,基本属性
---文件表
    id 主键
    file_path 文件path
    file_name 文件名字
    format 文件格式
    type 文件类型
    size 多少byte
    user_id 用户id
    is_pulic 是否公开


---user表
    id 主键
    email 邮箱
    user_name 用户名
    account 账户
    password 密码
    self_intro 自我介绍
    sex 性别
    avatar 头像
    reading_preference json 用户阅读偏好
    last_login_time： 上次登录时间 #用于检索



---用户关注表
    id 主键
    user_id 用户id
    follow_id 关注的用户id

---帖子表
    id 主键
    user_id 用户id
    title: 标题
    content： 帖子内容
    book_id 关联的书籍  可为null
    type_id 帖子类型id
    view_count： 浏览总数
    like_count 点赞次数
    start_count 收藏次数

---评论表
    id 主键
    user_id  用户id
    post_id 帖子id
    reply_comment_id 回复评论id
    content 内容
    like_count 点赞次数

--书籍表
    id 主键
    name 书籍name
    author 作者 #书籍的作者，可能存在多位作者，可使用特定分隔符区分
    publication_year 出版年份
    publisher 出版社
    isbn 唯一标识号
    genre 书籍类型 关联type表？
    description 简介
    cover_image_id 封面id 关联fileid
    total_pages 总页数
    language  语言
    average_rating 评分
    rating_count 用户评价总数
    view_count 浏览量
    download_count 下载量
    upload_time 上传时间
    user_id 用户id
    file_id 文件id


--书籍下环线坐标表
    id 主键
    book_id
    page_number 页数
    start_x
    start_y
    end_x
    end_y
    user_id
---书籍见解表
    id 主键
    underlined_id 下划线id
    opinion_text 见解内容
    like_count
----notebook 笔记表
    id 主键
    book_id 书籍id ，可为空
    user_id 用户id
    note_name
    note_content text
    file_id 文件表id


---点赞表
    id 主键
    user_id
    object_id 目标id
    type: 见解、书籍、评论、帖子


---收藏表
    id 主键
    user_id
    object_id
    type: 书籍、帖子

---书籍类型表
    id 主键
    type_name 名字
    type: 书籍、帖子
----agent
    id 主键
    name 智能体名字
    avatar 智能体头像
    description agent 描述
    system_prompt Agent 系统提示词
    welcome_message 欢迎提示语
    model_config json 模型配置 模型配置，包含模型类型、温度等参数
    tools json  Agent 可使用的工具列表 工具？？？ 此处直接配置spring bean file_name
    knowledge_base_ids 知识库ids,json格式，配置仓库信息
    agent_type： 智能体类型， 1.聊天性 2.功能型agent
    user_id ：
---cotext 上下文表
    id 主键
    session_id 会话id
    activate_messages 活跃列表ids
    summary 过去N条消息的摘要
--sessions
    id,会话唯一 ID
    title,会话标题
    user_id,所属用户 ID
    agent_id,关联的 agentId
    is_archived,是否归档
    description,会话描述

--messages
    id,消息唯一 ID
    session_id,所属会话 ID
    role,消息角色(user/assistant/system)
    content,消息内容
    token_count,Token 数量(可选，用于统计)
    model,使用的模型

--message-group-items
    id,关联唯一 ID
    group_tags_id,消息组topic ID
    message_id,消息 ID

---message-group-tags #主题
    id,标签唯一 ID
    group_id,消息组 ID
    tag_name,标签名称

--- messgae_groups
    id,消息组唯一 ID
    name,消息组名称
    description,消息组描述
    session_id,所属会话 ID
    is_active,是否活跃
    user_id,创建人 ID


--- topic-relations aichat 话题表
    id,关联唯一 ID
    parent_id,父话题 ID
    child_id,子话题 ID
    topic_name,话题名字







#技术栈
jdk21 + maven3.9.+ + git + spring-ai-alibaba +
 springboot3 + aliyun oss
+ dashscope model ，deepseek 、qwen

python3 + browser-use +
..................












